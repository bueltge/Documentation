name: PHP Composer & PHPCS Run

on:
    push:
        branches:
          - main
    pull_request:
        branches:
          - main
    workflow_dispatch:

jobs:
    build:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-versions:
                - '7.4'
                - '8.1'
                - '8.2'
                dependency-versions: [ 'lowest', 'highest' ]
                container-versions: [ '^1.1.0', '^2' ]

        steps:
            -   name: Checkout
                uses: actions/checkout@v3

            -   name: Setup PHP, Version ${{ matrix.php-versions }}
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
                    coverage: ${{ ((env.USE_COVERAGE == 'yes') && 'xdebug') || 'none' }}

            -   name: Check syntax error in sources
                run: find ./ -type f -name '*.php' -print0 | xargs -0 -L 1 -P 4 -- php -l
                
            -   name: Install Composer dependencies
                uses: ramsey/composer-install@v2
                with:
                    dependency-versions: ${{ matrix.dependency-versions }}
          
            -   name: Clear cache of Composer
                run: composer clear-cache

            -   name: Update Composer.json and composer.lock
                run: composer update

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Install dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install -q -n -a --no-progress --prefer-dist

            -   name: Run phpCS Scripts from composer.json
                run: composer cs
